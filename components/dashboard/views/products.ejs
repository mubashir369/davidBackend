<% layout('dashboard.ejs') -%>

    <%- include ../../dashboard/partials/header.ejs %>

    <div class="page px-1 px-s-0">

        <!-- <div class="px-2 pt-2 pb-0 hidden hidden-m">
            <input type="text" class="search colspan-2 border" placeholder="Search..." app-model="view.search" onkeyup="scope.searchApi2('cafeproducts',this.value)" spellcheck="false">
        </div> -->

        <div class="px-2 pt-2 pb-0">
        <select
        className="ml-lg-10 dp-text-description mt-1 mt-md-0"
        onchange="scope.cafe_sorting(this.value)"
        style="width: 10rem;
        float: right;"
        >
        <option value="">Sort By:</option>
        <option value="name-ASC" data-extra="name">
          Alphabet: A - Z
        </option>
        <option data-extra="name" value="name-DESC">
          Alphabet: Z - A
        </option>
        <option data-extra="price" value="price-ASC">
          Price: Low - High
        </option>
        <option data-extra="price" value="price-DESC">
          Price: High - Low
        </option>

      </select>
    </div>
            

        <div >

            <div class="table align-middle" app-init="getAllProduct('cafeproducts','getAllProduct')">

                <div class="row table-header">

                    <div class="cell middle" style="width: 5rem;"></div>
                    <div class="cell middle mobile-cell">Product Name</div>
                    <!--div class="cell middle">Brand</div-->
                    <div class="cell middle">Category</div>
                    <div class="cell middle">Sub-Category</div>
                    <!-- <div class="cell middle text-right hidden-m">Barcode</div> -->
                    <div class="cell middle text-right" style="width: 5rem;">RRP</div>
                    <!-- <div class="cell middle text-right hidden-m" style="width: 5rem;">Online</div>
                    <div class="cell middle text-right" style="width: 5rem;">Stock</div> -->
                    <!--div class="cell middle text-right hidden-m" style="width: 5rem;">On Order</div-->
                    <div class="cell middle" style="width: 5rem;">Action</div>

                </div>

                <div class="row" app-for="product in cafeproducts">

                    <div class="cell middle text-bold p-1 clickable" app-click="edit('cafeproducts',product)"><img app-src="product.image" src="/images/products/Product_placeholder.svg"></div>
                    <div class="cell middle text-weight-600 capitalise clickable mobile-cell" app-bind="product.name" app-click="edit('cafeproducts',product)"></div>
                    <!--div class="cell middle capitalise clickable" app-bind="product.brand" app-click="edit('cafeproducts',product)"></div-->
                    <div class="cell middle text-light capitalise" app-bind="product.cat"></div>
                    <div class="cell middle text-light capitalise" app-bind="product.sub"></div>
                    <!-- <div class="cell middle text-light text-right hidden-m" app-bind="product.barcode"></div> -->
                    <div class="cell middle text-light text-right" app-bind="parsePrice(product.price)"></div>
                    <!-- <div class="cell middle text-light text-right hidden-m"><div app-show="product.sell_online"><span class="icon tick secondary"></span></div></div>
                    <div class="cell middle text-light text-right" app-bind="product.stock"></div> -->
                    <!--div class="cell middle text-light text-center hidden-m"><div app-show="product.on_order"><span class="icon tick secondary"></span></div></div-->
                    <div class="cell middle text-right action-icons" app-attr="{id:'cell-'+product._key}">

                        <div class="context-link btn border" app-click="toggleContext(product._key)">
                            <span class="icon black arrowdown sm"></span>
                        </div>
                        <div class="context dropdown text-left" style="display: none" app-attr="{id:'context-'+product._key}">
                            <div class="link" app-click="edit('cafeproducts',product)">
                                <span class="icon black edit left"></span>
                                Edit
                            </div>
                            <div class="link" app-click="edit('cafeproducts',product,'delete')">
                                <span class="icon black delete left"></span>
                                Delete
                            </div>
                        </div>

                    </div>

                </div>

            </div>
            <div id="paginationID" class="pagination"></div>
        </div>
    </div>

     <div class="modal" app-show="view.modal == 'show_delete'" anim="{'enter':'fade-in','exit':'fade-out'}">

        <div class="modal-body p-0" anim="{'enter':'move-up','duration':'0.2'}">

            <div class="modal-header text-primary">
                <div class="title">
                    <h4 class="text-light">
                        Delete <span app-bind="new.name"></span>?
                    </h4>
                </div>
                <div class="text-right">
                    <h4 class="close-icon clickable" onclick="modalCloseAll()">&times;</h4>
                </div>
            </div>
            <div class="modal-content px-1 py-01" >
                <div class="grid col-4 mx-auto pb-1 gap-1 text-left">
                    <div class="colspan-1"></div>
                    <div class="colspan-1 text-center pt-1">
                        <a class="btn border w-100" app-click="modalCloseAll()">
                            Cancel
                        </a>
                    </div>

                    <div class="colspan-1 flex text-center pt-1">
                        <a class="btn bg-secondary w-100" app-click="delete('cafeproducts',new._key)">
                            Delete
                            <span class="icon delete white right"></span>
                        </a>
                    </div>
                </div>
            </div>

        </div>


    </div>


    <%- include('../../dashboard/partials/modal/new_product_With_subCat.ejs') %>

    <script>
        let starting = 1
    var pagePagination = {
    code : '',
    Extend : function(data) {
    data = data || {};
    pagePagination.size = data.size || 0;
    pagePagination.page = data.page || 0;
    pagePagination.step = data.step || 0;
    },
    Add : function(p, q) {
    for (var l =p;l < q; l++) {
    pagePagination.code += '<a>' + l + '</a>';
    }
    },
    Last : function() {
    pagePagination.code += '<i>...</i><a>' + pagePagination.size + '</a>';
    },
    First : function() {
    pagePagination.code += '<a>1</a><i>...</i>';
    },
    Click : function() {
    pagePagination.page = +this.innerHTML;
    pagePagination.Start();
    },
    Prev : function() {
    pagePagination.page--;
    //scope.changepage(pagePagination.page)
    if (pagePagination.page < 1) {
    pagePagination.page = 1;
    }
    pagePagination.Start();
    },
    Next : function() {
    pagePagination.page++;
    //scope.changepage(pagePagination.page)
    if (pagePagination.page > pagePagination.size) {
    pagePagination.page = pagePagination.size;
    }
    pagePagination.Start();
    },
    Bind : function() {
    var a = pagePagination.e.getElementsByTagName('a');
    for (var num = 0; num < a.length; num++) {
    if (+a[num].innerHTML === pagePagination.page)
    a[num].className = 'current';
    a[num].addEventListener('click', pagePagination.Click, false);
    }
    console.log(pagePagination.page)
    //scope.changepage(pagePagination.page)
    },
    Finish : function() {
    pagePagination.e.innerHTML = pagePagination.code;
    pagePagination.code = '';
    pagePagination.Bind();
    },
    Start : function() {
    if (pagePagination.size < pagePagination.step * 2 + 6) {
    pagePagination.Add(1, pagePagination.size + 1);
    } else if (pagePagination.page < pagePagination.step * 2 + 1) {
    pagePagination.Add(1, pagePagination.step * 2 + 4);
    pagePagination.Last();
    } else if (pagePagination.page > pagePagination.size - pagePagination.step * 2) {
    pagePagination.First();
    pagePagination.Add(pagePagination.size - pagePagination.step * 2 - 2,
    pagePagination.size + 1);
    } else {
    pagePagination.First();
    pagePagination.Add(pagePagination.page - pagePagination.step,
    pagePagination.page + pagePagination.step + 1);
    pagePagination.Last();
    }
    
    console.log(pagePagination.page)
    pagePagination.Finish();
    
    if(starting!==pagePagination.page){
        scope.changepage(pagePagination.page)
        starting = pagePagination.page
    }
    
    },
    Buttons : function(e) {
    var nav = e.getElementsByTagName('a');
    nav[0].addEventListener('click', pagePagination.Prev, false);
    nav[1].addEventListener('click', pagePagination.Next, false);
    },
    Create : function(e) {
    var html = [ '<a>◄</a>', // previous button
    '<span></span>', // paginationID container
    '<a>►</a>' // next button
    ];
    e.innerHTML = html.join('');
    pagePagination.e = e.getElementsByTagName('span')[0];
    pagePagination.Buttons(e);
    },
    Init : function(e, data) {
    pagePagination.Extend(data);
    pagePagination.Create(e);
    pagePagination.Start();
    }
    };
    
    var init = function(data) {
                            console.log(data,"ddddddd")
                                pagePagination.Init(document.getElementById('paginationID'), {
                                    size : data,
                                    page : 1,
                                    step : 5
                                });
                            };
       
    </script>