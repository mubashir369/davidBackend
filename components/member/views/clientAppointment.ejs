<% layout('member.ejs') -%>

    <%- include ../partials/header-member.ejs %>

    <!-- <div class="page px-2 p-s-0" app-init="get('customers','todaymember')"> -->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <div  class="page px-2 p-s-0" app-init="getAppoinmentById('<%- filterId.id%>','<%-filterId.user%>')" >
        <div class="grid gap-3 col-12">
            <div class="colspan-5 pb-0">
                <input
          type="text"
          class="search border"
          placeholder="Search by name, number or email"
          app-model="view.search"
          onkeyup="scope.searchApi('customers',this.value)"
          spellcheck="false"
        />
            </div>
            <div class="colspan-1 pb-0"></div>
            <div class="colspan-2 pb-0">
                <select class="colspan-2 border" name="" id="" onchange="scope.filterBySource('<%- filterId.id%>','<%-filterId.user%>',this.value)">
                    <option value="">Filter By Source</option>
                    <option value="Direct booking">Direct booking</option>
                    <option value="Referenced Booking">Referenced Booking</option>
                    <option value="Booked in salon">Booked in salon</option>
                    <option value="Booked Online">Booked Online</option>
                  </select>
            </div>
            <div class="colspan-2 pb-0">
                <select class="colspan-2 border" name="" id="" onchange="scope.filterByservice('<%- filterId.id%>','<%-filterId.user%>',this.value)">
                    <option value="">Filter By Service</option>
                    <%for(var i=0;i<services.length;i++){%>
                        <option value="<%-services[i]._key%>"><%-services[i].name%></option>
                        <%}%>
                   
                    <option value="source">Source</option>
                  </select>
            </div>
            <div class="colspan-2 pb-0">
                <select class="colspan-2 border" name="" id="" onchange="scope.appoint__sorting('<%-filterId.id%>','<%-filterId.user%>',this.value)">
                    <option value="">Sort</option>
                    <option value="SORT q.service_name ASC">Service A-Z</option>
                    <option value="SORT q.service_name DESC">Service Z-A</option>
                    <option value="SORT q.date DESC">Date New-Old</option>
                    <option value="SORT q.date ASC">Date Old-New</option>
                    <option value="LET total = TO_NUMBER(q.totals.total) SORT total DESC">Price High-Low</option>
                    <option value="LET total = TO_NUMBER(q.totals.total) SORT total ASC">Price Low-High</option>
                  </select>
            </div>
        </div>
       

        <div>

            <div class="table table-layout">

                <div class="row table-header">

                    <!-- <div class="cell middle" style="width: 4em"></div> -->
                    <div class="cell middle mobile-cell" style="width: 14em">service</div>
                    <div class="cell middle hidden-s" style="width: 14em">Start</div>
                    <div class="cell middle hidden-s" style="width: 14em">End</div>
                    <div class="cell middle hidden-s" style="width: 10em">Source</div>
                    <div class="cell middle hidden-s" style="width: 10em">Total</div>
                    <div class="cell middle hidden-s" style="width: 10em">Service Id</div>
                    <div class="cell middle hidden-s" style="width: 10em">Transaction Id</div>
                    <!-- <div class="cell middle" style="width: 4em"></div> -->
                    <div class="cell middle hidden-s" style="width: 5em">Download</div>

                </div>

               

                <div class="row" app-for="appoinment in appointmentCustomerData" >
                  

                   
                    <!-- <div class="cell middle">
                    
                    </div> -->
                    <div class="cell middle clickable text-weight-500 capitalise mobile-cell" >
                        <span app-bind="appoinment.service_name" ></span>
                    </div>
                    <div class="cell middle text-light hidden-s" app-bind="dateToString(appoinment.date)" ></div>
                    <div class="cell middle text-light hidden-s" app-bind="dateToString(appoinment.end_date)" ></div>
                    
                    <div class="cell middle text-light hidden-s" app-bind="appoinment.source" > test</div>
                    <div class="cell middle text-light hidden-s" app-bind="converPrice(appoinment.total.total)" > £test</div>
                    <div class="cell middle text-light hidden-s" app-bind="appoinment.serviceId" >test</div>
                    <div class="cell middle text-light hidden-s" app-bind="appoinment.transactionId" > test</div>
                    <!-- <div class="cell middle text-light hidden-s" ></div> -->
                    <div class="cell middle text-light hidden-s clickable text-center" app-click="downloadInvoice(appoinment.transactionId,appoinment._key,appoinment.customerId,customer_email,'Service Booking Invoice',appoinment.service_name,)"><i class="fa fa-download" style="font-size:24px"></i></div>
                    
                   

                </div> 

            </div>

        </div>
      
        <div id="paginationID"></div>

    </div>
    

    <script>
        let starting = 1
    var pagePagination = {
    code : '',
    Extend : function(data) {
    data = data || {};
    pagePagination.size = data.size || 0;
    pagePagination.page = data.page || 1;
    pagePagination.step = data.step || 3;
    },
    Add : function(p, q) {
    for (var l =p;l < q; l++) {
    pagePagination.code += '<a>' + l + '</a>';
    }
    },
    Last : function() {
    pagePagination.code += '<i>...</i><a>' + pagePagination.size + '</a>';
    },
    First : function() {
    pagePagination.code += '<a>1</a><i>...</i>';
    },
    Click : function() {
    pagePagination.page = +this.innerHTML;
    pagePagination.Start();
    },
    Prev : function() {
    pagePagination.page--;
    //scope.changepage(pagePagination.page)
    if (pagePagination.page < 1) {
    pagePagination.page = 1;
    }
    pagePagination.Start();
    },
    Next : function() {
    pagePagination.page++;
    //scope.changepage(pagePagination.page)
    if (pagePagination.page > pagePagination.size) {
    pagePagination.page = pagePagination.size;
    }
    pagePagination.Start();
    },
    Bind : function() {
    var a = pagePagination.e.getElementsByTagName('a');
    for (var num = 0; num < a.length; num++) {
    if (+a[num].innerHTML === pagePagination.page)
    a[num].className = 'current';
    a[num].addEventListener('click', pagePagination.Click, false);
    }
    console.log(pagePagination.page)
    //scope.changepage(pagePagination.page)
    },
    Finish : function() {
    pagePagination.e.innerHTML = pagePagination.code;
    pagePagination.code = '';
    pagePagination.Bind();
    },
    Start : function() {
    if (pagePagination.size < pagePagination.step * 2 + 6) {
    pagePagination.Add(1, pagePagination.size + 1);
    } else if (pagePagination.page < pagePagination.step * 2 + 1) {
    pagePagination.Add(1, pagePagination.step * 2 + 4);
    pagePagination.Last();
    } else if (pagePagination.page > pagePagination.size - pagePagination.step * 2) {
    pagePagination.First();
    pagePagination.Add(pagePagination.size - pagePagination.step * 2 - 2,
    pagePagination.size + 1);
    } else {
    pagePagination.First();
    pagePagination.Add(pagePagination.page - pagePagination.step,
    pagePagination.page + pagePagination.step + 1);
    pagePagination.Last();
    }
    
    console.log(pagePagination.page)
    pagePagination.Finish();
    
    if(starting!==pagePagination.page){
        scope.changepagenew('<%- filterId.id%>','<%-filterId.user%>',pagePagination.page)
        console.log("chhhhhhhhhhanged",pagePagination.page);
        starting = pagePagination.page
    }
    
    },
    Buttons : function(e) {
    var nav = e.getElementsByTagName('a');
    nav[0].addEventListener('click', pagePagination.Prev, false);
    nav[1].addEventListener('click', pagePagination.Next, false);
    },
    Create : function(e) {
    var html = [ '<a>◄</a>', // previous button
    '<span></span>', // paginationID container
    '<a>►</a>' // next button
    ];
    e.innerHTML = html.join('');
    pagePagination.e = e.getElementsByTagName('span')[0];
    pagePagination.Buttons(e);
    },
    Init : function(e, data) {
    pagePagination.Extend(data);
    pagePagination.Create(e);
    pagePagination.Start();
    }
    };
    
    var init = function(data) {
        pagePagination.Init(document.getElementById('paginationID'), {
            size : data,
            page : 1,
            step : 5
        });
    };

    
    
    </script>

    
