<% layout('member.ejs') -%> <%- include ../partials/header-member.ejs %>

<div
  class="page px-2 p-s-0"
  app-init="get_member_transactions('<%-user._key%>')"
>
  <div class="grid gap-3 col-12">
    <div class="colspan-5 pb-0">
      <input
        type="text"
        class="search colspan-2 border"
        placeholder="Search by Order Id"
        app-model="member_transactions_search"
        onkeyup="scope.searchApi('<%-user._key%>',this.value)"
        spellcheck="false"
      />
    </div>
    <div class="colspan-2 pb-0"></div>
    <div class="colspan-5 pb-0">
      <div class="grid col-12">
       
          <span class="colspan-2">Filter by Date</span>
          <div class="colspan-3">
            <input
              type="date"
              class="search colspan-8 border"
              placeholder="DD-MM-YYY"
              id="orderFrom"
              name="from"
              spellcheck="false"
            />
          </div>
          <div class="colspan-1" style="text-align: center">
            <p>TO</p>
          </div>

          <div class="colspan-3">
            <input
              type="date"
              class="search colspan-8 border"
              placeholder="DD-MM-YYY"
              id="orderTo"
              name="to"
              spellcheck="false"
            />
          </div>
          <div class="colspan-3" style="text-align: center">
            <button type="submit" app-click="drFilter('<%-user._key%>')" class="dp-btn bg-primary">Filter</button>
          </div>
       
      </div>
    </div>
  </div>
  <!-- <div class="px-2 pt-2 pb-0 hidden-m">
    <input
      type="text"
      class="search colspan-2 border"
      placeholder="Search by Order Id"
      app-model="member_transactions_search"
      onkeyup="scope.searchApi('<%-user._key%>',this.value)"
      spellcheck="false"
    />
  </div> -->
  <!-- <div class="px-2 pt-2 pb-0">
    <select
      className="ml-lg-10 dp-text-description mt-1 mt-md-0"
      style="width: 10rem; float: right"
      onchange="scope.get_member_transactions('<%-user._key%>',this.value)"
    >
      <option value="">Filter</option>
     <option value="a._created DESC" >Order Date New-Old</option>
     <option value="a._created ASC" >Order Date Old-New</option>
     <option value="" >Free Seats</option>
    </select>
  </div> -->

  <div>
    <div class="table">
      <div class="row table-header">
        <div class="cell middle mobile-cell" style="width: 10%">Order Id</div>

        <div class="cell middle mobile-cell" style="width: 20%">
          Transaction Id
        </div>
        <div class="cell middle hidden-s text-center@" style="width: 10%">
          Total Price
        </div>

        <div class="cell middle hidden-s text-center@" style="width: 10%">
          Status
        </div>
        <div class="cell middle hidden-s text-center@" style="width: 10%">
          Order Date
        </div>
        <div class="cell middle hidden-s text-center@" style="width: 10%">
          Invoice
        </div>
        <div class="cell middle hidden-s text-right" style="width: 10%">
          Slots date
        </div>
      </div>
      <input
        type="text"
        id="member_transactions_count"
        hidden
        app-bind="member_transactions_count"
      />
      <div class="row" app-for="order in member_transactions">
        <div class="cell middle hidden-s" app-bind="order.transaction_id"></div>
        <div
          class="cell middle hidden-s"
          app-bind="order.stripe_transcation_id"
        ></div>
        <div class="cell middle hidden-s text-center@">
          <span app-bind="parsePrice(order.item_total)" class="ml-01"></span>
        </div>
        <div
          class="cell middle hidden-s text-center@"
          app-bind="order.status"
        ></div>

        <!-- <div
          class="cell middle hidden-s text-center@"
          app-bind="parseISODate(order._created,'Do MMMM YYYY')"
        ></div> -->
        <div
        class="cell middle hidden-s text-center@"
        app-bind="parseNormalDate(order._created)"
      ></div>
        <div
          class="cell middle hidden-s text-center@"
          app-click="downloadInvoiceForOrder(order.transaction_id)"
        >
          <i class="fa fa-download" style="font-size: 24px"></i>
        </div>
        <div class="cell middle hidden-s text-right">
          <div app-show="order.items[0].date">
            <span app-bind="order.items[0].date"></span>
            <span
              class="bg-primary py-01 px-03 ml-02 orderPage-dates-cell"
              app-bind="parsePrice(order.items[0].price)"
            ></span>
          </div>

          <div app-show="order.items[1].date">
            <span app-bind="order.items[1].date"></span>
            <span
              class="bg-primary py-01 px-03 ml-02 orderPage-dates-cell"
              app-bind="parsePrice(order.items[1].price)"
            ></span>
          </div>

          <div app-show="order.items[2].date">
            <span app-bind="order.items[2].date"></span>
            <span
              class="bg-primary py-01 px-03 ml-02 orderPage-dates-cell"
              app-bind="parsePrice(order.items[2].price)"
            ></span>
          </div>

          <div app-show="order.items[3].date">
            <span app-bind="order.items[3].date"></span>
            <span
              class="bg-primary py-01 px-03 ml-02 orderPage-dates-cell"
              app-bind="parsePrice(order.items[3].price)"
            ></span>
          </div>

          <div app-show="order.items[4].date">
            <span app-bind="order.items[4].date"></span>
            <span
              class="bg-primary py-01 px-03 ml-02 orderPage-dates-cell"
              app-bind="parsePrice(order.items[4].price)"
            ></span>
          </div>

          <div app-show="order.items[5].date">
            <span app-bind="order.items[5].date"></span>
            <span
              class="bg-primary py-01 px-03 ml-02 orderPage-dates-cell"
              class="bg-primary py-01 px-1 radius-50"
              app-bind="parsePrice(order.items[5].price)"
            ></span>
          </div>
        </div>
      </div>
    </div>
    <div id="paginationID"></div>
  </div>
</div>
<script>
  let starting = 1;
  var pagePagination = {
    code: "",
    Extend: function (data) {
      data = data || {};
      pagePagination.size = data.size || 0;
      pagePagination.page = data.page || 1;
      pagePagination.step = data.step || 3;
    },
    Add: function (p, q) {
      for (var l = p; l < q; l++) {
        pagePagination.code += "<a>" + l + "</a>";
      }
    },
    Last: function () {
      pagePagination.code += "<i>...</i><a>" + pagePagination.size + "</a>";
    },
    First: function () {
      pagePagination.code += "<a>1</a><i>...</i>";
    },
    Click: function () {
      pagePagination.page = +this.innerHTML;
      pagePagination.Start();
    },
    Prev: function () {
      pagePagination.page--;
      //scope.changepage(pagePagination.page)
      if (pagePagination.page < 1) {
        pagePagination.page = 1;
      }
      pagePagination.Start();
    },
    Next: function () {
      pagePagination.page++;
      //scope.changepage(pagePagination.page)
      if (pagePagination.page > pagePagination.size) {
        pagePagination.page = pagePagination.size;
      }
      pagePagination.Start();
    },
    Bind: function () {
      var a = pagePagination.e.getElementsByTagName("a");
      for (var num = 0; num < a.length; num++) {
        if (+a[num].innerHTML === pagePagination.page)
          a[num].className = "current";
        a[num].addEventListener("click", pagePagination.Click, false);
      }
      console.log(pagePagination.page);
      //scope.changepage(pagePagination.page)
    },
    Finish: function () {
      pagePagination.e.innerHTML = pagePagination.code;
      pagePagination.code = "";
      pagePagination.Bind();
    },
    Start: function () {
      if (pagePagination.size < pagePagination.step * 2 + 6) {
        pagePagination.Add(1, pagePagination.size + 1);
      } else if (pagePagination.page < pagePagination.step * 2 + 1) {
        pagePagination.Add(1, pagePagination.step * 2 + 4);
        pagePagination.Last();
      } else if (
        pagePagination.page >
        pagePagination.size - pagePagination.step * 2
      ) {
        pagePagination.First();
        pagePagination.Add(
          pagePagination.size - pagePagination.step * 2 - 2,
          pagePagination.size + 1
        );
      } else {
        pagePagination.First();
        pagePagination.Add(
          pagePagination.page - pagePagination.step,
          pagePagination.page + pagePagination.step + 1
        );
        pagePagination.Last();
      }

      console.log(pagePagination.page);
      pagePagination.Finish();

      if (starting !== pagePagination.page) {
        scope.changepage("<%-user._key%>", pagePagination.page);
        starting = pagePagination.page;
      }
    },
    Buttons: function (e) {
      var nav = e.getElementsByTagName("a");
      nav[0].addEventListener("click", pagePagination.Prev, false);
      nav[1].addEventListener("click", pagePagination.Next, false);
    },
    Create: function (e) {
      var html = [
        "<a>◄</a>", // previous button
        "<span></span>", // paginationID container
        "<a>►</a>", // next button
      ];
      e.innerHTML = html.join("");
      pagePagination.e = e.getElementsByTagName("span")[0];
      pagePagination.Buttons(e);
    },
    Init: function (e, data) {
      pagePagination.Extend(data);
      pagePagination.Create(e);
      pagePagination.Start();
    },
  };

  var init = function (data) {
    pagePagination.Init(document.getElementById("paginationID"), {
      size: data,
      page: 1,
      step: 5,
    });
  };
  let v = document.getElementById("member_transactions_count");
</script>

